services:
  backend:
    build: .
    restart: always
    ports:
      - "3333:3333"
    volumes:
      - .:/app
      - /app/node_modules # Compatibilidade com mac e windows (Desvantagem: precisa buildar sempre que baixar nova dependência)
      # Comente a linha acima caso use linux
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      - database

  database:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    command: [ "postgres", "-c", "port=${POSTGRES_PORT}" ]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -p ${POSTGRES_PORT}"]
      interval: 10s
      timeout: 5s
      retries: 5

  plataforma-civica-frontend:
    build:
      context: ../plataforma-civica-frontend
      dockerfile: Dockerfile
      target: development
    ports:
      - "3000:3000"
    volumes:
      # Bind mount apenas o código fonte, excluindo node_modules e .next
      - ../plataforma-civica-frontend/src:/app/src
      - ../plataforma-civica-frontend/public:/app/public
      - ../plataforma-civica-frontend/package.json:/app/package.json
      - ../plataforma-civica-frontend/package-lock.json:/app/package-lock.json
      - ../plataforma-civica-frontend/next.config.ts:/app/next.config.ts
      - ../plataforma-civica-frontend/tailwind.config.ts:/app/tailwind.config.ts
      - ../plataforma-civica-frontend/tsconfig.json:/app/tsconfig.json
      - ../plataforma-civica-frontend/postcss.config.js:/app/postcss.config.js
      - ../plataforma-civica-frontend/postcss.config.mjs:/app/postcss.config.mjs
      - ../plataforma-civica-frontend/eslint.config.mjs:/app/eslint.config.mjs
      - ../plataforma-civica-frontend/prettier.config.mjs:/app/prettier.config.mjs
      # Volumes nomeados para cache
      - node_modules:/app/node_modules
      - nextjs_cache:/app/.next
    environment:
      - NODE_ENV=development
      - NEXT_TELEMETRY_DISABLED=1
      - WATCHPACK_POLLING=true
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:3333
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - backend
    stdin_open: true
    tty: true


volumes:
  node_modules:
  nextjs_cache:
  postgres_data:


